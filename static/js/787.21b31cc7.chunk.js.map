{"version":3,"file":"static/js/787.21b31cc7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from '../../store/contacts/thunks/thunk';\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n  const { contacts } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const isDuplicate = name => contacts.find(contact => contact.name === name);\n\n  const handleCreateContact = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (isDuplicate(name)) {\n      e.target.reset();\n      return Notiflix.Notify.warning(`${name} is already in contacts(( `);\n    }\n    dispatch(addContactThunk({ name, number }));\n    e.target.reset();\n  };\n  return (\n    <form onSubmit={handleCreateContact}>\n      <p className=\"mb-3 fs-3\">Add new contact </p>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\"\n            id=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"number\" className=\"form-label\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className=\"form-control\"\n            id=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-success\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from '../../store/contacts/thunks/thunk';\nconst ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContactThunk(id));\n  };\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <p className=\" fs-4 \">\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-sm \"\n        onClick={handleDelete}\n      >\n        {' '}\n        Delete\n      </button>\n    </li>\n  );\n};\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nexport default ContactItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { getContactsThunk } from '../../store/contacts/thunks/thunk';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const { contacts, isLoading, error } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    !contacts && dispatch(getContactsThunk());\n  }, [dispatch, contacts]);\n\n  const filterContacts = () => {\n    if (filter.length <= 0) {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      {isLoading && <h2 className=\"mb-3 fs-3\">Loading...</h2>}\n      {error && <h2 className=\"mb-3 fs-3\"> {error}</h2>}\n      {contacts && (\n        <>\n          <p className=\"mb-3 fs-3\"> Your Contacts:</p>\n          <ul className=\"list-group list-group-flush\">\n            {filterContacts().length !== 0 ? (\n              filterContacts().map(contact => (\n                <ContactItem key={contact.id} contact={contact} />\n              ))\n            ) : (\n              <p className=\"mb-3 fs-3\">Not found</p>\n            )}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { setFilter } from '../../store/contacts/filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onFilterChange = e => {\n    const value = e.currentTarget.value;\n    dispatch(setFilter(value));\n  };\n  return (\n    <div className=\"mb-3\">\n      <p className=\"mb-3 fs-3\">Find a contact by name</p>\n\n      <label className=\"form-label\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Any name\"\n          onChange={e => onFilterChange(e)}\n          value={filter}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div className=\"container mx-auto mt-5\">\n      <div className=\"mb-5\">\n        <ContactForm />\n      </div>\n      <div className=\"mb-4\">\n        <Filter />\n      </div>\n      <div className=\"mb-5\">\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["contacts","useSelector","state","dispatch","useDispatch","onSubmit","e","preventDefault","name","target","value","number","find","contact","isDuplicate","reset","Notiflix","addContactThunk","className","htmlFor","type","id","pattern","title","required","onClick","deleteContactThunk","isLoading","error","filter","useEffect","getContactsThunk","filterContacts","length","toLowerCase","includes","map","placeholder","onChange","currentTarget","setFilter","onFilterChange"],"sourceRoot":""}